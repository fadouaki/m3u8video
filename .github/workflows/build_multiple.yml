name: Build M3U8 Downloader (Multiple Formats)

on:
  push:
    branches: [ master, main ]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-windows-multiple:
    runs-on: windows-latest
    strategy:
      matrix:
        build-type: ['onefile', 'onedir']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements.txt pyinstaller

      - name: Install FFmpeg
        run: |
          choco install ffmpeg

      - name: Build Windows app (OneFile)
        if: matrix.build-type == 'onefile'
        run: |
          pyinstaller --onefile --windowed --noupx --strip --name=M3U8Downloader-Portable --icon=app_icon.ico --version-file=version_info.txt app.py

      - name: Build Windows app (OneDir)
        if: matrix.build-type == 'onedir'
        run: |
          pyinstaller --onedir --windowed --noupx --strip --name=M3U8Downloader --icon=app_icon.ico --version-file=version_info.txt app.py

      - name: Create installer (OneDir only)
        if: matrix.build-type == 'onedir'
        run: |
          # Create NSIS installer script
          echo 'OutFile "M3U8Downloader-Installer.exe"' > installer.nsi
          echo 'InstallDir "$PROGRAMFILES\M3U8Downloader"' >> installer.nsi
          echo 'Section "MainSection" SEC01' >> installer.nsi
          echo '  SetOutPath "$INSTDIR"' >> installer.nsi
          echo '  File /r "dist\M3U8Downloader\*"' >> installer.nsi
          echo '  CreateShortcut "$DESKTOP\M3U8 Downloader.lnk" "$INSTDIR\M3U8Downloader.exe"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          
          # Build installer (if NSIS is available)
          # makensis installer.nsi

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-${{ matrix.build-type }}
          path: dist/

  build-portable-python:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create portable Python package
        run: |
          mkdir portable
          echo "@echo off" > portable/run.bat
          echo "python app.py" >> portable/run.bat
          copy app.py portable/
          copy requirements.txt portable/
          copy *.ico portable/
          copy *.png portable/
          echo "echo Install Python 3.11+ and run: pip install -r requirements.txt" > portable/INSTALL.txt
          echo "echo Then run: python app.py" >> portable/INSTALL.txt

      - name: Upload Portable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Portable-Python
          path: portable/